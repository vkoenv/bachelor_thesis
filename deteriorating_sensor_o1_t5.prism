pomdp

observables
	o, t, b
endobservables


const double p11 = 0.9;
const double p12 = 0.1;
const double p22 = 1;

const int ci = 20;
const int cs = 75;
const int cr = 50;
const int cd = 100;
const int maxi = 5;
const int maxo = 1;

module m1
	s : [0..1] init 0;
	t : [0..maxi] init 0;
	o : [0..maxo] init 0;
	b : bool init true; 
	
	//t=0
	[o] s=0 & t=0& !b -> 0.60000000:(o' = 0) & (b' = true) + 0.40000000:(o' = 1) & (b' = true);
	[o] s=1 & t=0& !b -> 0.30000000:(o' = 0) & (b' = true) + 0.70000000:(o' = 1) & (b' = true);
	//t=1
	[o] s=0 & t=1& !b -> 0.57000000:(o' = 0) & (b' = true) + 0.43000000:(o' = 1) & (b' = true);
	[o] s=1 & t=1& !b -> 0.33000000:(o' = 0) & (b' = true) + 0.67000000:(o' = 1) & (b' = true);
	//t=2
	[o] s=0 & t=2& !b -> 0.54000000:(o' = 0) & (b' = true) + 0.46000000:(o' = 1) & (b' = true);
	[o] s=1 & t=2& !b -> 0.36000000:(o' = 0) & (b' = true) + 0.64000000:(o' = 1) & (b' = true);
	//t=3
	[o] s=0 & t=3& !b -> 0.51000000:(o' = 0) & (b' = true) + 0.49000000:(o' = 1) & (b' = true);
	[o] s=1 & t=3& !b -> 0.39000000:(o' = 0) & (b' = true) + 0.61000000:(o' = 1) & (b' = true);
	//t=4
	[o] s=0 & t=4& !b -> 0.48000000:(o' = 0) & (b' = true) + 0.52000000:(o' = 1) & (b' = true);
	[o] s=1 & t=4& !b -> 0.42000000:(o' = 0) & (b' = true) + 0.58000000:(o' = 1) & (b' = true);
	//t=5
	[o] s=0 & t=5& !b -> 0.45000000:(o' = 0) & (b' = true) + 0.55000000:(o' = 1) & (b' = true);
	[o] s=1 & t=5& !b -> 0.45000000:(o' = 0) & (b' = true) + 0.55000000:(o' = 1) & (b' = true);




	//c
	[c] s = 0 & t < maxi & b -> p11:(s'=0) & (t'=t+1) & (b'=false) + p12:(s'=1) & (t'=t+1) & (b'=false);
	//s
	[s] s = 0 & t < maxi & b -> p11:(s'=0) & (t'=t+1) & (b'=false) + p12:(s'=1) & (t'=t+1) & (b'=false);
	//r
	[r] s = 0 & t < maxi & b -> p11:(s'=0) & (t'= 1) & (b'=false) + p12:(s'=1) & (t'= 1) & (b'=false);
	
	//c
	[c] s = 1 & t < maxi & b -> p22:(s'=1) & (t'=t+1) & (b'=false);
	//s
	[s] s = 1 & t < maxi & b -> p11:(s'=0) & (t'=t+1) & (b'=false) + p12:(s'=1) & (t'=t+1) & (b'=false);
	//r
	[r] s = 1 & t < maxi & b -> p11:(s'=0) & (t'= 1) & (b'=false) + p12:(s'=1) & (t'= 1) & (b'=false);
	
endmodule
label "end"= t = maxi;
label "incontrol" = s = 0;
label "outofcontrol" = s = 1;

rewards
	s = 1: cd;
	[s] s = 0: cs;
	[s] s = 1: cs+cr;
	[r] s = 0: cs+ci;
	[r] s = 1: cs+ci+cr;
endrewards
